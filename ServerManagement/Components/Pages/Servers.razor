@page "/servers"
@using ServerManagement.Components.Controls
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Servers</h3>
<br />
<br />

<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in cities)
        {
            <div class="col">
                <div class="card" >
                    <img src="@($"/imagens/{city}.png")" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary">@city</button>
                    </div>
                </div>

                
        </div>
        }
    </div>
</div>

<br/>


   
 <ServerComponent></ServerComponent>




<ul>
    @foreach(var server in servers)
    {
        <li>@server.Name in @server.City is 
            <span style="color:@(server.IsOnline ? "green" : "red") ">
                @(server.IsOnline ? "online" : "offline")
            </span>
            <a href="/servers/@server.ServerId" class="btn btn-link">Edit</a>
            &nbsp;
            <EditForm
                Model="server"
                FormName="@($"form-server- {server.ServerId}")"
            OnValidSubmit="@(() => {DeleteServer(server.ServerId);})">
            <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>
        </li>
       
    }
    
</ul>
<p>
    <a href="/servers/add" class="btn btn-primary">Add</a>
</p>

@code {
    private List<Server> servers = ServerRepository.GetServersByCity("Toronto");
    private List<String> cities = CitiesRepository.GetCities(); 

    private void DeleteServer(int ServerId)
    {
        if(ServerId > 0)
        {
            ServerRepository.DeleteServer(ServerId);
            NavigationManager.NavigateTo("/servers");
        }
    }
}

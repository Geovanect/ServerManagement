@page "/servers/{id:int}"

@inject NavigationManager navigate

<h3>Edit Server</h3>
<br/>
<br/>


@if (server != null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <InputNumber @bind-Value="server.ServerId" hidden/>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.Name" class="form-control">Name</InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => server.Name"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
            <div class="col-6">
                <InputText @bind-Value="server.City" class="form-control">City</InputText>
            </div>
            <div class="col">
                <ValidationMessage For="() => server.City"></ValidationMessage>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Online</label>
            </div>
            <div class="col-6">
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input" />
            </div>

        </div>
        <br/>
        <button class="btn btn-primary" type="submit" >Update</button>
        &nbsp;
        <a href="/servers" class="btn btn-primary">Back</a>
    </EditForm>
}
<br/>




@code{
    [Parameter]
    public int Id {get;set;}

    [SupplyParameterFromForm]
    private Server? server { get; set; }

    protected override void OnParametersSet(){

        server ??= ServerRepository.GetServerById(this.Id);
    }

    private void Submit(){

        if(server != null)
        {
            ServerRepository.UpdateServer(server.ServerId, server);
        }
        navigate.NavigateTo("/servers");


    }
}
